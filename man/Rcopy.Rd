% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rcopy.R
\name{Rcopy}
\alias{Rcopy}
\title{Copy and open R, Rmd, and qmd files with QMS approved headers.}
\usage{
Rcopy(
  from = NULL,
  to = NULL,
  version = NULL,
  copyright_holder = NULL,
  open = rstudioapi::isAvailable(),
  save = FALSE
)
}
\arguments{
\item{from}{path of original R, Rmd, or qmd file. Defaults to the path of
the source editor context.}

\item{to}{path or directory of new file. If \code{to} is a directory,
\code{from} is copied to that directory. Defaults to the basename of the
\code{from} file.}

\item{version}{either \code{NULL} for the current R version, or a
\code{character} in the form \code{"N.n.n"} or \code{"Nnn"}.}

\item{copyright_holder}{either \code{NULL} for the default Simulations Plus
copyright statement, a single \code{character} defining the copyright
holders and accompanying text to follow copyright mark and year, a
\code{character} vector for multiple separate copyright statements, or
\code{FALSE} for no copyright.}

\item{open}{\code{logical} indicating whether to open files in RStudio.}

\item{save}{\code{logical} indicating whether to save files prior to copy.}
}
\value{
invisibly returns \code{NULL}.
}
\description{
This function is somewhat similar to the CPP shell command \code{Rcopy},
but it is not called.
}
\examples{
\dontrun{
# Copy an R program from some directory to the working directory with the same file name
Rcopy("../../d1pk/R/file.R")

# Copy an R program from some directory to the working directory with a new name
Rcopy("../../d1pk/R/file.R", "new-file.R")

# Copy the active R program to the working directory with the same file name
Rcopy()

# Copy the active R program to the working directory with a new name
Rcopy(to = "new-file.R")

# R Markdown works too
Rcopy("markdown-file.Rmd", "new-markdown-file.Rmd")

}

}
\seealso{
\code{\link{Rcopy_shared_code}} for simpler copying from the
  shared-code repository; \code{\link{Redit}} for creating R programs
}
