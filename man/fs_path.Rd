% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fs_path.R
\name{fs_path}
\alias{fs_path}
\alias{path_sponsor}
\alias{path_drug}
\alias{path_project}
\alias{path_stage}
\alias{path_substage}
\alias{path_dataorig}
\alias{path_r_includes}
\alias{path_r_library}
\alias{browse_project_email}
\alias{browse_project_sharepoint}
\alias{browse_project_gantt}
\alias{browse_project_tracker}
\title{Build file paths based on CPP's file system and directory structure}
\usage{
path_sponsor(sponsor, path = ".")

path_drug(drug, sponsor = "*", path = ".")

path_project(project_number, drug = "*", sponsor = "*", path = ".")

path_stage(stage, project_number = "*", drug = "*", sponsor = "*", path = ".")

path_substage(
  substage,
  stage = "*",
  project_number = "*",
  drug = "*",
  sponsor = "*",
  path = "."
)

path_dataorig(path = ".")

path_r_includes(path = ".")

path_r_library(path = ".", version = NULL)

browse_project_email(path = ".")

browse_project_sharepoint(path = ".")

browse_project_gantt(path = ".")

browse_project_tracker(path = ".")
}
\arguments{
\item{sponsor, drug, project_number, stage, substage}{\code{character} vectors of
directory patterns or names. Wildcard expansion (also known as 'globbing')
is supported. See \code{\link[base]{Sys.glob}}.}

\item{path}{\code{character} vector of file or directory paths that will be
truncated to the substage, stage, project number, drug, or sponsor level.
Ignored in \code{path_*} functions when the first argument is provided
(i.e., \code{path} is ignored if the \code{sponsor} argument is provided to
\code{path_sponsor()}).}

\item{version}{a single R version (major and minor) as a \code{character}.
This argument is used to identify which library tree to use in
\code{path_r_library}.}
}
\value{
For \code{path_*} functions, the path(s) to the sponsor, drug, or
project directory corresponding to either: the \code{path} of a file or
directory; or the name(s) of the sponsor, drug, or project number.

For \code{browse_project_*} functions, invisibly returns \code{NULL}.
}
\description{
These functions are only intended to be used at CPP

See
\href{https://wiki.cognigencorp.com/display/qms/QMS-1.6+Standard+Directory+Structure}{Wiki
QMS 1.6 Standard Directory Structure}.
}
\details{
\subsection{\code{path_*}}{

\code{path_sponsor()} returns the path to sponsor directories.
\itemize{
\item When only the \code{path} argument is set (including the default,
\code{path = "."}), returns one sponsor directory corresponding to each
\code{path}.
\item When the \code{sponsor} argument is provided, \code{path} is ignored and
all sponsor directories matching any element of \code{sponsor} are returned.
}

\code{path_drug()} returns the path to drug directories, which are one
directory below sponsor directories.
\itemize{
\item When only the \code{path} argument is set (including the default,
\code{path = "."}), returns one drug directory corresponding to each
\code{path}.
\item When the \code{drug} argument is provided, \code{path} is ignored and all
drug directories matching any element of \code{drug} are returned. Further
subsetting of drug directories can be done by providing \code{sponsor}.
}

\code{path_project()} returns the path to project directories, which are one
directory below drug directories.
\itemize{
\item When only the \code{path} argument is set (including the default,
\code{path = "."}), returns one project directory corresponding to each
\code{path}.
\item When the \code{project_number} argument is provided, \code{path} is ignored
and all project directories matching \code{project_number} are returned.
Further subsetting of project directories can be done by providing
\code{drug} and/or \code{sponsor}. Resulting directories will match at least
one element of both \code{drug} and \code{sponsor}.
}
}

\subsection{\code{browse_project_*}}{

\code{browse_project_email()} opens email aliases in Outlook on the web in
a new browser tab.
\itemize{
\item When called without any arguments, opens the email alias corresponding to
the working directory.
\item When one or more paths are provided to \code{path}, opens all corresponding
project email aliases.
\item Email aliases that do not exist or you do not have access to might open,
but not display email content.
}

\code{browse_project_sharepoint()} opens internal SharePoint sites in a new
browser tab.
\itemize{
\item When called without any arguments, opens the SharePoint site corresponding
to the working directory.
\item When one or more paths are provided to \code{path}, opens all corresponding
SharePoint sites.
\item SharePoint sites that do not exist are expected to be skipped.
}

\code{browse_project_gantt()} and \code{browse_project_tracker()} open
project management services.
\itemize{
\item When called without any arguments, opens the project gantt chart or tracker
corresponding to the working directory.
\item When one or more paths are provided to \code{path}, opens all corresponding
project gantt charts or trackers.
\item Projects that do not exist or you do not have access to might open,
but not display content.
}
}
}
\examples{
\dontrun{
# the below examples reference a test directory on CPP's file system.
cd("/misc/dceuticals/doloxan/009002/")

# the default behavior is to return the path to the sponsor, drug, or project.
path_sponsor()
path_drug()
path_project()

# or open the resource for the corresponding project.
# note that these will not produce desired results with the test dceuticals
# directory because the project alias and SharePoint site do not exist.
browse_project_email()
browse_project_sharepoint()

# the below examples do not rely on the working directory
cd("~")

# use the pattern "*" to match any sponsor, drug, or project number.

# get paths to all sponsor directories:
path_sponsor("*")

# get paths to sponsor directories that begin with "bio":
path_sponsor("bio*")

# get paths to drug directories that end with "umab":
path_drug("*umab")

# get paths to project directories that begin with "20" for drugs that end
# with "umab" or start with "ab":
path_project("20*", drug = c("*umab", "ab*"))

# open email aliases for all projects where the project number starts with
# "006" and ends with "58"
browse_project_email(path_project("006*58"))

}
}
